import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import styles from "./AccountSettings.module.css"; // ‚úÖ ‡πÉ‡∏ä‡πâ CSS Module

const AccountSettings = () => {
  const navigate = useNavigate();
  const [profileImage, setProfileImage] = useState("/default-avatar.png");
  const [loading, setLoading] = useState(false);
  const [errors, setErrors] = useState({});
  const [showPopup, setShowPopup] = useState(false); // ‚úÖ State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° Popup

  const [formData, setFormData] = useState(() => {
    // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Local Storage ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    const savedData = localStorage.getItem("accountSettings");
    return savedData
      ? JSON.parse(savedData)
      : {
          username: "",
          email: "",
          phone: "",
          address: "",
          password: "",
          birthdate: "",
          notifyEmail: false,
        };
  });

  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á Local Storage ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà formData ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
  useEffect(() => {
    localStorage.setItem("accountSettings", JSON.stringify(formData));
  }, [formData]);

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÑ‡∏ü‡∏•‡πå)
  const handleImageUpload = (event) => {
    const file = event.target.files[0];
    if (file) {
      const validImageTypes = ["image/jpeg", "image/jpg", "image/png", "image/gif", "image/webp"];

      if (!validImageTypes.includes(file.type)) {
        alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (JPG, PNG, GIF ,WEBP)");
        return;
      }

      if (file.size > 10 * 1024 * 1024) {
        alert("‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 10MB");
        return;
      }

      const img = new Image();
      img.onload = () => {
        const reader = new FileReader();
        reader.onload = (e) => setProfileImage(e.target.result);
        reader.readAsDataURL(file);
      };
      img.onerror = () => {
        alert("‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
      };
      img.src = URL.createObjectURL(file);
    }
  };

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡πà‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏°
  const handleChange = (event) => {
    const { name, value, type, checked } = event.target;

    if (name === "phone") {
        const sanitizedValue = value.replace(/\D/g, "").slice(0, 10);
        setFormData((prev) => ({ ...prev, phone: sanitizedValue }));
        return;
    }

    setFormData((prev) => ({
        ...prev,
        [name]: type === "checkbox" ? checked : value,
    }));
};


  // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á
  const validateForm = () => {
    let newErrors = {};

    if (!formData.username.trim()) newErrors.username = "‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ";
    if (!formData.email.includes("@")) newErrors.email = "‚ö†Ô∏è ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á";
    if (formData.phone.length !== 10) newErrors.phone = "‚ö†Ô∏è ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç 10 ‡∏´‡∏•‡∏±‡∏Å";
    if (formData.password.length < 6) newErrors.password = "‚ö†Ô∏è ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 6 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£";
    if (formData.birthdate && new Date(formData.birthdate) > new Date())
      newErrors.birthdate = "‚ö†Ô∏è ‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï";

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  const handleSubmit = (event) => {
    event.preventDefault();
    if (!validateForm()) return; // ‚ùå ‡∏ñ‡πâ‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô Validation ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å

    setLoading(true);
    setTimeout(() => {
      setLoading(false);
      setShowPopup(true); // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á Popup ‡∏´‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
      localStorage.removeItem("accountSettings"); // ‡∏•‡πâ‡∏≤‡∏á Local Storage ‡∏´‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
    }, 2000);
  };

  const closePopup = () => {
    setShowPopup(false); // ‚úÖ ‡∏õ‡∏¥‡∏î Popup
  };

  return (
    <div className={styles.accountSettingsWrapper}>
      <div className={styles.accountSettingsContainer}>
        <header className={styles.accountSettingsHeader}>
          <button className={styles.accountSettingsBackButton} onClick={() => navigate("/profile")}>
            üîô
          </button>
          <h1>‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß</h1>
        </header>

        <h2 className={styles.accountSettingsTitle}>‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</h2>
        <div className={styles.accountSettingsProfileUpload}>
          <img src={profileImage} alt="‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå" />
          <input type="file" id="profileUpload" accept="image/*" onChange={handleImageUpload} />
          <label htmlFor="profileUpload" className={styles.accountSettingsUploadLabel}>
            üì∏ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
          </label>
        </div>

        <form className={styles.accountSettingsForm} onSubmit={handleSubmit}>
          <label className={styles.accountSettingsLabel}>üë§ ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà</label>
          <input
            className={styles.accountSettingsInput}
            type="text"
            name="username"
            value={formData.username}
            onChange={handleChange}
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà"
            aria-label="‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà"
          />
          {errors.username && <span className={styles.errorText}>{errors.username}</span>}

          <label className={styles.accountSettingsLabel}>üìß ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÉ‡∏´‡∏°‡πà</label>
          <input className={styles.accountSettingsInput} type="email" name="email" value={formData.email} onChange={handleChange} placeholder="example@email.com" />
          {errors.email && <span className={styles.errorText}>{errors.email}</span>}

          <label className={styles.accountSettingsLabel}>üìû ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå</label>
          <input className={styles.accountSettingsInput} type="tel" name="phone" value={formData.phone} onChange={handleChange} placeholder="08X-XXX-XXXX" />
          {errors.phone && <span className={styles.errorText}>{errors.phone}</span>}

          <label className={styles.accountSettingsLabel}>üè° ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà</label>
          <input className={styles.accountSettingsInput} type="text" name="address" value={formData.address} onChange={handleChange} placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì" />

          <label className={styles.accountSettingsLabel}>üîí ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà</label>
          <input className={styles.accountSettingsInput} type="password" name="password" value={formData.password} onChange={handleChange} placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà" />
          {errors.password && <span className={styles.errorText}>{errors.password}</span>}

          <label className={styles.accountSettingsLabel}>üéÇ ‡∏ß‡∏±‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏õ‡∏µ‡πÄ‡∏Å‡∏¥‡∏î</label>
          <input className={styles.accountSettingsInput} type="date" name="birthdate" value={formData.birthdate} onChange={handleChange} />
          {errors.birthdate && <span className={styles.errorText}>{errors.birthdate}</span>}

          <div className={styles.accountSettingsCheckboxContainer}>
            <input type="checkbox" name="notifyEmail" checked={formData.notifyEmail} onChange={handleChange} />
            <label>üì© ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏≠‡∏µ‡πÄ‡∏°‡∏•</label>
          </div>

          <button type="submit" className={styles.accountSettingsSaveButton} disabled={loading}>
            {loading ? "‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å..." : "üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á"}
          </button>
        </form>
      </div>

      {/* ‚úÖ Popup ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô */}
      {showPopup && (
        <div className={styles.popupBackground}>
          <div className={styles.popupContainer}>
            <p>‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß</p>
            <button onClick={closePopup} className={styles.popupButton}>
              ‡∏ï‡∏Å‡∏•‡∏á
            </button>
          </div>
        </div>
      )}
    </div>
  );
};

export default AccountSettings;
