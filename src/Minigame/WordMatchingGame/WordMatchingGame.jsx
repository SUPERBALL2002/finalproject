import React, { useState } from "react";
import styles from "./WordMatchingGame.module.css";

const words = [
  { english: "Apple", thai: "‡πÅ‡∏≠‡∏õ‡πÄ‡∏õ‡∏¥‡πâ‡∏•" }, { english: "Dog", thai: "‡∏™‡∏∏‡∏ô‡∏±‡∏Ç" },
  { english: "Sun", thai: "‡∏û‡∏£‡∏∞‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå" }, { english: "Book", thai: "‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠" },
  { english: "Car", thai: "‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå" }, { english: "Tree", thai: "‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ" },
  { english: "Chair", thai: "‡πÄ‡∏Å‡πâ‡∏≤‡∏≠‡∏µ‡πâ" }, { english: "Table", thai: "‡πÇ‡∏ï‡πä‡∏∞" },
  { english: "Water", thai: "‡∏ô‡πâ‡∏≥" }, { english: "Fire", thai: "‡πÑ‡∏ü" }
];

const WordMatchingGame = () => {
  const [selected, setSelected] = useState({});
  const [message, setMessage] = useState("");
  const [showPopup, setShowPopup] = useState(false);

  const handleSelect = (eng, thai) => {
    setSelected((prev) => ({ ...prev, [eng]: thai }));
  };

  const checkAnswers = () => {
    const isCorrect = words.every((word) => selected[word.english] === word.thai);
    if (isCorrect) {
      setShowPopup(true);
    } else {
      setMessage("‚ùå ‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‚ùå");
    }
  };

  const restartGame = () => {
    setSelected({});
    setMessage("");
    setShowPopup(false);
  };

  return (
    <div className={styles.WordMatchingGameBackground}>
      <div className={styles.WordMatchingGameContainer}>
        <h2>üîó ‡πÄ‡∏Å‡∏°‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå üîó</h2>
        <div className={styles.WordMatchingGameGrid}>
          <div className={styles.WordMatchingGameColumn}>
            <h3>‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©</h3>
            {words.map((word) => (
              <div key={word.english} className={styles.WordMatchingGameWordBox}>
                {word.english}
              </div>
            ))}
          </div>
          <div className={styles.WordMatchingGameColumn}>
            <h3>‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢</h3>
            {words.map((word) => (
              <div
                key={word.thai}
                className={`${styles.WordMatchingGameWordBox} ${selected[word.english] === word.thai ? styles.WordMatchingGameSelected : ""}`}
                onClick={() => handleSelect(word.english, word.thai)}
              >
                {word.thai}
              </div>
            ))}
          </div>
        </div>
        <button className={styles.WordMatchingGameCheckButton} onClick={checkAnswers}>‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö</button>
        <button className={styles.WordMatchingGameCheckButton} onClick={restartGame}>üîÑ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà</button>
        <p className={styles.WordMatchingGameMessage}>{message}</p>
      </div>
      {showPopup && (
        <div className={styles.WordMatchingGamePopup}>
          <div className={styles.WordMatchingGamePopupContent}>
            <h2>üéâ ‡πÄ‡∏Å‡πà‡∏á‡∏°‡∏≤‡∏Å! üéâ</h2>
            <p>‡∏Ñ‡∏∏‡∏ì‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î!</p>
            <button className={styles.WordMatchingGamePopupButton} onClick={restartGame}>üîÑ ‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á</button>
          </div>
        </div>
      )}
    </div>
  );
};

export default WordMatchingGame;