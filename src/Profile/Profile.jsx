import React, { useState, useEffect } from "react";
import { Link, useNavigate } from "react-router-dom";
import styles from "./Profile.module.css";
import { CircularProgressbar, buildStyles } from "react-circular-progressbar";
import "react-circular-progressbar/dist/styles.css";

const UserProfile = () => {
  const [progress, setProgress] = useState(0);
  const [status, setStatus] = useState("‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...");
  const [showPopup, setShowPopup] = useState(false); // state ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö popup
  const navigate = useNavigate();

  const handleLogout = () => {
    setShowPopup(true); // ‡πÅ‡∏™‡∏î‡∏á popup
  };

  const confirmLogout = () => {
    setShowPopup(false);
    navigate("/login");
  };

  const cancelLogout = () => {
    setShowPopup(false);
  };

  useEffect(() => {
    console.log("üîç ‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå");
  }, []);

  useEffect(() => {
    const updateStatus = () => {
      setStatus(navigator.onLine ? "üü¢ ‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå" : "üî¥ ‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå");
    };
    updateStatus();
    window.addEventListener("online", updateStatus);
    window.addEventListener("offline", updateStatus);
    return () => {
      window.removeEventListener("online", updateStatus);
      window.removeEventListener("offline", updateStatus);
    };
  }, []);

  useEffect(() => {
    const calculateProgress = () => {
      let completedFields = 5;
      let totalFields = 6;
      setProgress((completedFields / totalFields) * 100);
    };
    calculateProgress();
  }, []);

  const subjectProgress = {
    ‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå: 80,
    ‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå: 65,
    ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢: 80,
    ‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©: 90,
  };

  return (
    <div className={styles.userProfileContainer}>
      <header className={styles.userProfileHeader}>
        <button className={styles.userProfileBackButton} onClick={() => navigate("/homepage")}>
          üîô
        </button>
        <h1>‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô</h1>
      </header>

      <div className={styles.userProfileMainContainer}>
        <div className={styles.userProfileInfoCard}>
          <h3>üë¶ ‡∏Å‡∏≤‡∏£‡∏±‡∏ì‡∏¢‡∏†‡∏≤‡∏™ ‡∏û‡∏¥‡∏®‡∏≤‡∏•‡∏™‡∏≤‡∏™‡∏ô‡πå </h3>
          <p><strong>üìß ‡∏≠‡∏µ‡πÄ‡∏°‡∏•:</strong> example@email.com</p>
          <p><strong>üìû ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£:</strong> 098-7654321</p>
          <p><strong>üéÇ ‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î:</strong> 1 ‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏° 2012</p>
          <p><strong>üè° ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:</strong> ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø, ‡πÑ‡∏ó‡∏¢</p>
          <p><strong>ü¶∏ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</strong> <span className={styles.userProfileStatus}>{status}</span></p>
          <div className={styles.userProfileProgressContainer}>
            <div className={styles.userProfileProgressLabel}>üìä ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå: <span>{progress}%</span></div>
            <div className={styles.userProfileProgressBar}>
              <div className={styles.userProfileProgress} style={{ width: `${progress}%` }}></div>
            </div>
          </div>
        </div>

        <div className={styles.userProfileStatsCard}>
          <h3>üèÜ ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô</h3>
          <p><strong>üéÆ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏Å‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏£‡∏±‡πâ‡∏á:</strong> 50</p>
          <div className={styles.userProfileChart}>
            <h3>üìä ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ß‡∏¥‡∏ä‡∏≤</h3>
            <div className={styles.userProfileSubjectProgressRow}>
              {Object.entries(subjectProgress).map(([subject, percentage]) => (
                <div key={subject} className={styles.userProfileSubjectProgressItem}>
                  <div className={styles.userProfileCircularProgressContainer}>
                    <CircularProgressbar
                      value={percentage}
                      text={`${percentage}%`}
                      styles={buildStyles({
                        textSize: "14px",
                        pathColor: "var(--circular-path-color, #4caf50)",
                        textColor: "var(--circular-text-color, #333)",
                        trailColor: "var(--circular-trail-color, #d6d6d6)",
                      })}
                    />
                  </div>
                  <p className={styles.userProfileSubjectLabel}>{subject}</p>
                </div>
              ))}
            </div>
          </div>
        </div>

        <div className={styles.userProfileSettingsCard}>
          <Link to="/account-settings">
            <button className={`${styles.userProfileButton} ${styles.userProfileEditButton}`}>
              ‚öôÔ∏è ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ö‡∏±‡∏ç‡∏ä‡∏µ
            </button>
          </Link>
          <Link to="/score">
            <button className={`${styles.userProfileButton} ${styles.userProfileViewScore}`}>
              üåü ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô
            </button>
          </Link>
          <button className={styles.userProfileLogoutButton} onClick={handleLogout}>
            üö™ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
          </button>
        </div>
      </div>

      {showPopup && (
        <div className={styles.userProfileLogoutPopup}>
          <div className={styles.userProfilePopupContent}>
            <p>‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö?</p>
            <button onClick={confirmLogout} className={styles.userProfileConfirmButton}>‡∏ï‡∏Å‡∏•‡∏á</button>
            <button onClick={cancelLogout} className={styles.userProfileCancelButton}>‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
          </div>
        </div>
      )}
    </div>
  );
};

export default UserProfile;
